'20/07/16 [SQL 테스트01] 담당: 김희숙

파일명: 번호_이름 해당 부분 본인 이름으로 작성하세요
(예. Test01-답안-번호-이름-200716.txt)

다음에 본인 이름 작성하세요
학년 (3) 번호 (1) 이름 (고현준) 제출일 (2020-07-16)

다음 아래 (   ) 해당 부분에 답안을 작성하시오
=====================================================================================
[Test 01-01] 데이터베이스 용어

1-1. 어느 웹사이트에서 회원 가입시 반드시 입력 받는 로그인 아이디(mem-id)는 중복 허용되지 않는다고 한다.
  mem-id 컬럼을 정의할 때 데이터 무결성 측면에서 필요한 제약조건으로 가장 올바른 것은? 

답안 (3)

1) UNIQUE                                  2) NOT NULL 
3) UNIQUE와 NOT NULL                     4) UNIQUE 와 IS NULL
 
1-2. 외래키에 대한 설명으로 적절하지 않은 것을 모두 고르시오 

답안 (3, 4)

1) 테이블 생성시 설정할 수 있다
2) 외래키 값은 널 값을 가질 수 없다
3) 한 테이블에 하나만 존재해야 한다
4) 외래키 값은 참조무결성 제약을 받을 수 있다
 
1-3. 애트리뷰트 집합, A={A1, A2, A3, A4} 로 구성된 릴레이션 R(A1, A2, A3, A4) 에서 
후보키(candidate)가 3개라면, 
대체키(alternate key) 의 개수는? 

답안 (1)

1) 3개           2) 2개            3) 1개           4) 0개
 
1-4. 관계 데이터 모델(Relational data model)은 외적으로는 
단순한 테이블(Table) 형태의 구조로 모든 데이터를 표현하지만 
이론적으로는 수학적인 릴레이션(Relation)을 기초로 하고 있다. 
이러한 관계 데이터 모델에 대한 설명 중 가장 적절하지 않은 것은? 

답안 (4)

1) 릴레이션 R은 릴레이션 스키마(Schema)와 릴레이션 인스턴스(Instance)로 구성된다.
2) 기본 키(Primary Key)에 속해 있는 애트리뷰트(Attribute)는 언제 어느 때나 널(Null) 값을 가질 수 없다는 것을 개체 무결성(Entity integrity) 제약이라 한다.
3) 릴레이션은 참조할 수 없는 외래 키(Foreign Key) 값을 가져서는 안 된다는 것을 참조 무결성(Referential integriy) 제약이라 한다.
4) 릴레이션 R의 정의에서 보면 릴레이션에 포함되어 있는 투플(Tuple)의 수를 그 릴레이션의 차수(Degree)라 한다.
-------------------------------------------------------------------------------------
[Test01-02] SQL
다음에 대하여 답하시오

2-1. 다음 쿼리문을 실행했을 때 투플의 개수는? 답안 (3개)
Dept는 학과 컬럼이다. 기계과, 전산과, 전자과에 학생 20명씩 재학 중이다. 
다음 쿼리문을 실행했을 때 튜플의 개수는?

select distinct dept from student

답안 (3개)

2-2. 다음 중 데이터베이스 뷰(View)에 대한 설명으로 가장 적절하지 않은 것은? 

답안 (3)

① 사용자의 질의를 간단하게 할 수 있다.
② 데이터의 일부를 사용자로부터 감추어 보안 기능을 할 수 있다.
③ 데이터가 물리적으로 저장된다
④ 테이블을 삭제하면 뷰도 삭제된다

2-3. 다음 ‘학생’ 릴레이션(Relation)에 대한 것이다   

답안 (4)
 
소속학과가 ‘정보통신’이고 ‘4’학년인 학생의 이름, 학년을 검색한 후, 
결과 투플로 이루어지는 뷰 ‘VIC4’ 를 생성하였다. 
그리고 아래 UDDATE문을 수행한 후, SELECT문을 수행한 결과는 무엇인가?
(단, 뷰 ‘VIC4’ 에는 WITH CHECK OPTION이 포함되어 있고, 
애트리뷰트(Attribute) 이름은 ‘학생’ 릴레이션과 동일하게 부여하며, 
자료형태는 모두 CHAR(10)이라고 가정한다)

UPDATE       VIC4
SET 소속학과 =  ‘전기’
WHERE 이름 =  ‘이화성’;

SELECT    *
FROM      VIC4;

① <이화성, 4>                      ② <김연희, 4>
③ <이화성, 4>, <박민숙, 3>          ④ <이화성, 4>, <김연희, 4>
⑤ <이화성, 4>, <박민숙, 3>, <김연희, 4>

2-4. 다음과 같은 문장으로 ‘학생’ 테이블을 생성한 후, 유효한 투플(Tuple)들을 삽입하였다.
create table 학생 (학번 char(8) primary key, 장학금 integer);

아래 두 SQL문장을 성공적으로 실행한 후 SQL 1, SQL 2 문장의 실행결과로 가장 적절한 것은?

답안 (3)

SQL 1:   select count(학번) from 학생 where 장학금 >= 5000 or 장학금 < 5000;
SQL 2:   select count(학번) from 학생;

① SQL 1, SQL 2 문장의 실행 결과는 항상 같다.
② SQL 1, SQL 2 문장의 실행 결과는 항상 다르다.
③ SQL 1, SQL 2 문장의 실행 결과는 다를 수 있으며, 
그 이유는 장학금 속성(Attribute)에 널(Null)값이 존재할 수 있기 때문이다.
④ SQL 1, SQL 2 문장의 실행 결과는 다를 수 있으며, 
그 이유는 학번 속성(Attribute)에 널(Null)값이 존재할 수 있기 때문이다.


2-5. 다음 중 내부조인이 아닌 것은? 

답안 (1)

   ① 동등 조인         ② 자연 조인
   ③ 교차 조인         ④ 왼쪽 외부 조인

2-6. 다음 SQL 검색문의 의미로 가장 적절한 것은? 

답안 (2)

SELECT DISTINCT 학과명 FROM 학생;

  ① 학생 테이블의 학과명을 모두 검색하라. 
  ② 학생 테이블의 학과명을 중복되지 않게 모두 검색하라. 
  ③ 학과 테이블의 학과명 중에서 중복된 학과명을 모두 검색하라. 
  ④ 학생 테이블을 학과명 구별하지 말고 모두 검색하라.


2-7. SQL문법에서 권한 부여하는 문법은 무엇인가? 

답안 (GRANT)


2-8. Oracle 문법에서 사용자 생성하는 SQL 문법을 작성하시오


(사용자명 test
 암호  1234
 사용할 테이블스페이스이름 users)

CREATE user test
identified by 1234 
default tablespace users;

-------------------------------------------------------------------------------------
[Test01-03] SQL  (사용자 test/암호 1234/사용할 테이블스페이스이름 users)

다음을 Oracle 을 사용하여 실습하고 
실행결과를 화면캡처 또는 실행결과 마우스 복사하여 작성하시오
(book_orders.sql)

-- 질의1-1) '축구의 역사' 라는 도서의 출판사와 가격을 검색하라

SELECT publisher, price 
FROM book
WHERE bookname='축구의 역사';

PUBLISHER     PRICE
---------- --------
굿스포츠       7000

-- 질의1-2) 김연아 고객의 전화번호를 검색하라
SELECT phone 
FROM customer
WHERE name='김연아';

PHONE          
---------------
000-6000-0001

-- 질의1-3) 10,000 이상인 도서의 이름과 출판사를 검색하라

SELECT bookname, publisher
FROM book
WHERE price >=10000;

BOOKNAME             PUBLISHER 
-------------------- ----------
축구 아는 여자       나무수    
축구의 이해          대한미디어
골프 바이블          대한미디어
야구의 추억          이상미디어
야구를 부탁해        이상미디어
Olympic Champions    Pearson 

-- 질의2-1) 모든 도서의 이름과 가격을 검색하라

SELECT bookname, price 
FROM book;

BOOKNAME                PRICE
-------------------- --------
축구의 역사              7000
축구 아는 여자          13000
축구의 이해             22000
골프 바이블             35000
피겨 교본                8000
역도 단계별 기술         6000
야구의 추억             20000
야구를 부탁해           13000
올림픽 이야기            7500
Olympic Champions       13000

-- 질의2-2) 모든 도서의 도서번호, 도서이름, 출판사, 가격을 검색하라

SELECT bookid, bookname, publisher, price  
FROM book;

BOOKID BOOKNAME             PUBLISHER     PRICE
------ -------------------- ---------- --------
     1 축구의 역사          굿스포츠       7000
     2 축구 아는 여자       나무수        13000
     3 축구의 이해          대한미디어    22000
     4 골프 바이블          대한미디어    35000
     5 피겨 교본            굿스포츠       8000
     6 역도 단계별 기술     굿스포츠       6000
     7 야구의 추억          이상미디어    20000
     8 야구를 부탁해        이상미디어    13000
     9 올림픽 이야기        삼성당         7500
    10 Olympic Champions    Pearson       13000

-- 질의2-3) 도서 테이블에 있는 모든 출판사를 검색하라
--(중복제거) 도서 테이블에 있는 모든 출판사를 검색하라

SELECT distinct publisher
FROM book;

PUBLISHER 
----------
나무수
이상미디어
대한미디어
Pearson
굿스포츠
삼성당

-- 질의2-4) 가격이 20,000 원 미만인 도서를 검색하라

SELECT * 
FROM book
WHERE price < 20000

BOOKID BOOKNAME             PUBLISHER     PRICE
------ -------------------- ---------- --------
     1 축구의 역사          굿스포츠       7000
     2 축구 아는 여자       나무수        13000
     5 피겨 교본            굿스포츠       8000
     6 역도 단계별 기술     굿스포츠       6000
     8 야구를 부탁해        이상미디어    13000
     9 올림픽 이야기        삼성당         7500
    10 Olympic Champions    Pearson       13000
    
--질의2-5) 가격이 10,000 원 이상 20,000 원 이하인 도서를 검색하라
--(BETWEEN .. AND 사용)

SELECT *
FROM book
WHERE price between 10000 and 20000;

BOOKID BOOKNAME             PUBLISHER     PRICE
------ -------------------- ---------- --------
     2 축구 아는 여자       나무수        13000
     7 야구의 추억          이상미디어    20000
     8 야구를 부탁해        이상미디어    13000
    10 Olympic Champions    Pearson       13000
    
--질의2-5) 가격이 10,000 원 이상 20,000 원 이하인 도서를 검색하라
--(부등호 사용)

SELECT *
FROM book
WHERE price >=10000 and price <= 20000;

BOOKID BOOKNAME             PUBLISHER     PRICE
------ -------------------- ---------- --------
     2 축구 아는 여자       나무수        13000
     7 야구의 추억          이상미디어    20000
     8 야구를 부탁해        이상미디어    13000
    10 Olympic Champions    Pearson       13000

-- 질의2-6) 출판사가 '굿스포츠' 혹은 '대한미디어' 인 도서를 검색하라
-- (IN 사용)

SELECT *
FROM book
WHERE publisher in '대한미디어';

BOOKID BOOKNAME             PUBLISHER     PRICE
------ -------------------- ---------- --------
     3 축구의 이해          대한미디어    22000
     4 골프 바이블          대한미디어    35000

--질의2-7) --출판사가 '굿스포츠' 혹은 '대한미디어' 가 아닌 도서를 검색하라
--(NOT IN 사용)

SELECT *
FROM book
WHERE publisher not in '대한미디어';

BOOKID BOOKNAME             PUBLISHER     PRICE
------ -------------------- ---------- --------
     1 축구의 역사          굿스포츠       7000
     2 축구 아는 여자       나무수        13000
     5 피겨 교본            굿스포츠       8000
     6 역도 단계별 기술     굿스포츠       6000
     7 야구의 추억          이상미디어    20000
     8 야구를 부탁해        이상미디어    13000
     9 올림픽 이야기        삼성당         7500
    10 Olympic Champions    Pearson       13000

--(패턴문자, 와일드카드)
-- 질의3-1) '축구의 역사' 를 출간한 도서명, 출판사를 검색하라

SELECT bookname, publisher
FROM book
WHERE bookname = '축구의 역사';

BOOKNAME             PUBLISHER 
-------------------- ----------
축구의 역사          굿스포츠  

-- 질의3-2) 도서이름에 '축구' 가 포함된 도서명, 출판사를 검색하라

SELECT bookname, publisher
FROM book
WHERE bookname like '%축구%';

BOOKNAME             PUBLISHER 
-------------------- ----------
축구의 역사          굿스포츠  
축구 아는 여자       나무수    
축구의 이해          대한미디어

-- 질의3-3) 도서이름 왼쪽 두번째 위치에 '구' 라는 문자열을 갖는 도서를 검색하라

SELECT * 
FROM book
WHERE bookname like '_구%';

BOOKID BOOKNAME             PUBLISHER     PRICE
------ -------------------- ---------- --------
     1 축구의 역사          굿스포츠       7000
     2 축구 아는 여자       나무수        13000
     3 축구의 이해          대한미디어    22000
     7 야구의 추억          이상미디어    20000
     8 야구를 부탁해        이상미디어    13000
     
-- 질의3-4) 축구에 관한 도서 중 가격이 20,000 이상인 도서를 검색하라

SELECT *
FROM book
WHERE bookname like '%축구%' and price >= 20000;

BOOKID BOOKNAME             PUBLISHER     PRICE
------ -------------------- ---------- --------
     3 축구의 이해          대한미디어    22000
     
--(정렬)
-- 질의4-1) 도서를 이름순으로 검색하라

SELECT * 
FROM book
ORDER BY bookname asc;

BOOKID BOOKNAME             PUBLISHER     PRICE
------ -------------------- ---------- --------
    10 Olympic Champions    Pearson       13000
     4 골프 바이블          대한미디어    35000
     8 야구를 부탁해        이상미디어    13000
     7 야구의 추억          이상미디어    20000
     6 역도 단계별 기술     굿스포츠       6000
     9 올림픽 이야기        삼성당         7500
     2 축구 아는 여자       나무수        13000
     1 축구의 역사          굿스포츠       7000
     3 축구의 이해          대한미디어    22000
     5 피겨 교본            굿스포츠       8000

-- 질의4-2) 도서를 가격순으로 검색하고, 가격이 같으면 이름순으로 검색하라

SELECT * 
FROM book
ORDER BY price ASC, bookname asc;

BOOKID BOOKNAME             PUBLISHER     PRICE
------ -------------------- ---------- --------
     6 역도 단계별 기술     굿스포츠       6000
     1 축구의 역사          굿스포츠       7000
     9 올림픽 이야기        삼성당         7500
     5 피겨 교본            굿스포츠       8000
    10 Olympic Champions    Pearson       13000
     8 야구를 부탁해        이상미디어    13000
     2 축구 아는 여자       나무수        13000
     7 야구의 추억          이상미디어    20000
     3 축구의 이해          대한미디어    22000
     4 골프 바이블          대한미디어    35000
     
-- 질의4-3) 도서를 가격의 내림차순으로 검색하고, 가격이 같으면 출판사의 오름차순으로 검색하라

SELECT *
FROM book
order by price desc, publisher asc;

BOOKID BOOKNAME             PUBLISHER     PRICE
------ -------------------- ---------- --------
     4 골프 바이블          대한미디어    35000
     3 축구의 이해          대한미디어    22000
     7 야구의 추억          이상미디어    20000
    10 Olympic Champions    Pearson       13000
     2 축구 아는 여자       나무수        13000
     8 야구를 부탁해        이상미디어    13000
     5 피겨 교본            굿스포츠       8000
     9 올림픽 이야기        삼성당         7500
     1 축구의 역사          굿스포츠       7000
     6 역도 단계별 기술     굿스포츠       6000

--(집계함수/GROUP BY)
-- 질의5-1) 주문도서의 총 판매액을 검색하라

SELECT SUM(saleprice)
from orders;

SUM(SALEPRICE)
--------------
        118000

-- 질의5-2) 2번 김연아 고객이 주문한 도서의 총 판매액을 검색하라

SELECT SUM(saleprice)
FROM orders
WHERE custid = 2;

SUM(SALEPRICE)
--------------
         15000

-- 질의5-3) 주문도서의 총 판매액, 평균값, 최저가, 최고가를 검색하라

SELECT SUM(saleprice), AVG(saleprice), MIN(saleprice), MAX(saleprice)
FROM orders;

-- 질의5-4) 도서별 판매 건수를 검색하라

SELECT bookid, COUNT(bookid)
from orders
Group by bookid
ORDER BY bookid asc;

BOOKID COUNT(BOOKID)
------ -------------
     1             1
     2             1
     3             1
     5             1
     6             1
     7             1
     8             2
    10             2
    
-- 질의5-5) 고객별로 주문한 도서의 총 수량과 총 판매액을 검색하라

SELECT custid, count(orderid), sum(saleprice)
FROM orders
GROUP BY custid;

CUSTID COUNT(ORDERID) SUM(SALEPRICE)
------ -------------- --------------
     1              3          39000
     2              2          15000
     4              2          33000
     3              3          31000
     
-- 질의5-6) 가격이 8,000 원 이상인 도서를 구매한 고객에 대하여
-- 고객별 주문 도서의 총 수량을 검색하라.  단, 두 권 이상 구매한 고객만 구한다

SELECT custid, count(orderid)
FROM orders
WHERE saleprice >= 8000
GROUP BY custid
HAVING count(orderid) >= 2;

--(조인)
-- 질의6-1) 고객과 고객의 주문에 관한 데이터를 모두 검색하라

SELECT *
FROM customer, orders
WHERE customer.custid = orders.custid;

CUSTID NAME     ADDRESS              PHONE              ORDERID CUSTID BOOKID  SALEPRICE ORDERDATE 
------ -------- -------------------- --------------- ---------- ------ ------ ---------- ----------
     1 박지성   영국 맨체스타        000-5000-0001            1      1      1       6000 13/07/01  
     1 박지성   영국 맨체스타        000-5000-0001            2      1      3      21000 13/07/03  
     2 김연아   대한민국 서울        000-6000-0001            3      2      5       8000 13/07/03  
     3 장미란   대한민국 강원도      000-7000-0001            4      3      6       6000 13/07/04  
     4 추신수   미국 클리블랜드      000-8000-0001            5      4      7      20000 13/07/05  
     1 박지성   영국 맨체스타        000-5000-0001            6      1      2      12000 13/07/07  
     4 추신수   미국 클리블랜드      000-8000-0001            7      4      8      13000 13/07/07  
     3 장미란   대한민국 강원도      000-7000-0001            8      3     10      12000 13/07/08  
     2 김연아   대한민국 서울        000-6000-0001            9      2     10       7000 13/07/09  
     3 장미란   대한민국 강원도      000-7000-0001           10      3      8      13000 13/07/10  
     
-- 질의6-2) 고객과 고객의 주문에 관한 데이터를 고객별로 정렬하여 검색하라

SELECT *
FROM customer, orders
WHERE customer.custid = orders.custid
order by customer.custid;

CUSTID NAME     ADDRESS              PHONE              ORDERID CUSTID BOOKID  SALEPRICE ORDERDATE 
------ -------- -------------------- --------------- ---------- ------ ------ ---------- ----------
     1 박지성   영국 맨체스타        000-5000-0001            2      1      3      21000 13/07/03  
     1 박지성   영국 맨체스타        000-5000-0001            6      1      2      12000 13/07/07  
     1 박지성   영국 맨체스타        000-5000-0001            1      1      1       6000 13/07/01  
     2 김연아   대한민국 서울        000-6000-0001            9      2     10       7000 13/07/09  
     2 김연아   대한민국 서울        000-6000-0001            3      2      5       8000 13/07/03  
     3 장미란   대한민국 강원도      000-7000-0001            4      3      6       6000 13/07/04  
     3 장미란   대한민국 강원도      000-7000-0001           10      3      8      13000 13/07/10  
     3 장미란   대한민국 강원도      000-7000-0001            8      3     10      12000 13/07/08  
     4 추신수   미국 클리블랜드      000-8000-0001            7      4      8      13000 13/07/07  
     4 추신수   미국 클리블랜드      000-8000-0001            5      4      7      20000 13/07/05 

-- 질의6-3) 고객의 이름과 고객이 주문한 도서의 가격을 검색하라

SELECT customer.name, ORDERS.SALEPRICE
FROM customer, orders
WHERE CUSTOMER.CUSTID = ORDERS.CUSTID;

NAME      SALEPRICE
-------- ----------
박지성         6000
박지성        21000
김연아         8000
장미란         6000
추신수        20000
박지성        12000
추신수        13000
장미란        12000
김연아         7000
장미란        13000

-- 질의6-4) 고객이름별로 주문한 모든 도서의 총 판매액을 구하고, 고객별로 정렬하라

SELECT customer.name, ORDERS.SALEPRICE
FROM customer, orders
WHERE CUSTOMER.CUSTID = ORDERS.CUSTID
ORDER BY customer.name;

NAME      SALEPRICE
-------- ----------
김연아         7000
김연아         8000
박지성        21000
박지성        12000
박지성         6000
장미란         6000
장미란        13000
장미란        12000
추신수        13000
추신수        20000

--(3개 테이블 조인)
-- 질의7-1) 고객의 이름과 고객이 주문한 도서의 이름을 검색하라

SELECT CUSTOMER.NAME, BOOK.BOOKNAME
FROM book, customer, orders
WHERE BOOK.BOOKID = ORDERS.BOOKID and CUSTOMER.CUSTID = ORDERS.CUSTID;

NAME     BOOKNAME            
-------- --------------------
박지성   축구의 역사         
박지성   축구 아는 여자      
박지성   축구의 이해         
김연아   피겨 교본           
장미란   역도 단계별 기술    
추신수   야구의 추억         
장미란   야구를 부탁해       
추신수   야구를 부탁해       
김연아   Olympic Champions   
장미란   Olympic Champions

-- 질의7-2) 가격이 20,000 원인 도서를 주문한 고객의 이름과 도서의 이름을 검색하라

SELECT CUSTOMER.NAME, BOOK.BOOKNAME
FROM book, customer, orders
WHERE ORDERS.SALEPRICE >= 20000 and BOOK.BOOKID = ORDERS.BOOKID and CUSTOMER.CUSTID = ORDERS.CUSTID;

NAME     BOOKNAME                PRICE
-------- -------------------- --------
박지성   축구의 이해             22000
추신수   야구의 추억             20000

--(외부조인)
--질의8-1) 도서를 구매하지 않은 고객을 포함하여 고객의 이름과 주문한 가격을 검색하라



--(부질의 : sub query)
--질의9-1) 가장 비싼 도서이름을 검색하라

SELECT bookname
from book
where price = (select max(price) from book);

BOOKNAME            
--------------------
골프 바이블

--(수정/삭제)
--Customer(custid, name, address, phone)
--질의10-1) Customer 테이블에서 고객번호가 5인 고객의 주소를 '대한민국 부산'으로 수정하라
            수정한 이후 결과를 조회하시오

UPDATE customer 
set address = '대한민국 부산'
WHERE CUSTID = 5;

select * 
from customer;

CUSTID NAME     ADDRESS              PHONE          
------ -------- -------------------- ---------------
     1 박지성   영국 맨체스타        000-5000-0001  
     2 김연아   대한민국 서울        000-6000-0001  
     3 장미란   대한민국 강원도      000-7000-0001  
     4 추신수   미국 클리블랜드      000-8000-0001  
     5 박세리   대한민국 부산  

--질의10-2) Customer 테이블에서 박세리 고객의 주소를 김연아 고객의 주소로 수정하라
수정한 이후 결과를 조회하시오

UPDATE customer 
set address = (select address 
                from customer
                where name = '김연아')
WHERE name = '박세리';

select * 
from customer;

CUSTID NAME     ADDRESS              PHONE          
------ -------- -------------------- ---------------
     1 박지성   영국 맨체스타        000-5000-0001  
     2 김연아   대한민국 서울        000-6000-0001  
     3 장미란   대한민국 강원도      000-7000-0001  
     4 추신수   미국 클리블랜드      000-8000-0001  
     5 박세리   대한민국 서울                       

--질의11-1) Customer 테이블에서 고객번호가 5인 고객을 삭제하라
삭제한 이후 결과를 조회하시오

DELETE 
FROM customer
where custid = 5;

select * 
from customer;

CUSTID NAME     ADDRESS              PHONE          
------ -------- -------------------- ---------------
     1 박지성   영국 맨체스타        000-5000-0001  
     2 김연아   대한민국 서울        000-6000-0001  
     3 장미란   대한민국 강원도      000-7000-0001  
     4 추신수   미국 클리블랜드      000-8000-0001  
     
-------------------------------------------------------------------------------------
